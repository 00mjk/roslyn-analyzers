<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="it" original="../MicrosoftNetCoreSecurityResources.resx">
    <body>
      <trans-unit id="ReviewCodeForDllInjectionVulnerabilitiesMessage">
        <source>Potential DLL injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</source>
        <target state="new">Potential DLL injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForDllInjectionVulnerabilitiesTitle">
        <source>Review code for DLL injection vulnerabilities</source>
        <target state="new">Review code for DLL injection vulnerabilities</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForFilePathInjectionVulnerabilitiesMessage">
        <source>Potential file path injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</source>
        <target state="new">Potential file path injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForFilePathInjectionVulnerabilitiesTitle">
        <source>Review code for file path injection vulnerabilities</source>
        <target state="new">Review code for file path injection vulnerabilities</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForInformationDisclosureVulnerabilitiesMessage">
        <source>Potential information disclosure vulnerability was found where '{0}' in method '{1}' may contain unintended information from '{2}' in method '{3}'.</source>
        <target state="new">Potential information disclosure vulnerability was found where '{0}' in method '{1}' may contain unintended information from '{2}' in method '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForInformationDisclosureVulnerabilitiesTitle">
        <source>Review code for information disclosure vulnerabilities</source>
        <target state="new">Review code for information disclosure vulnerabilities</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForProcessCommandInjectionVulnerabilitiesMessage">
        <source>Potential process command injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</source>
        <target state="new">Potential process command injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForProcessCommandInjectionVulnerabilitiesTitle">
        <source>Review code for process command injection vulnerabilities</source>
        <target state="new">Review code for process command injection vulnerabilities</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForSqlInjectionVulnerabilitiesMessage">
        <source>Potential SQL injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</source>
        <target state="new">Potential SQL injection vulnerability was found where '{0}' in method '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReviewCodeForSqlInjectionVulnerabilitiesTitle">
        <source>Review code for SQL injection vulnerabilities</source>
        <target state="new">Review code for SQL injection vulnerabilities</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterDeserializeMaybeWithoutBinderSetMessage">
        <source>The method '{0}' is insecure when deserializing untrusted data without a SerializationBinder to restrict the type of objects in the deserialized object graph.</source>
        <target state="new">The method '{0}' is insecure when deserializing untrusted data without a SerializationBinder to restrict the type of objects in the deserialized object graph.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterDeserializeMaybeWithoutBinderSetTitle">
        <source>Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize</source>
        <target state="new">Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterDeserializeWithoutBinderSetMessage">
        <source>The method '{0}' is insecure when deserializing untrusted data without a SerializationBinder to restrict the type of objects in the deserialized object graph.</source>
        <target state="new">The method '{0}' is insecure when deserializing untrusted data without a SerializationBinder to restrict the type of objects in the deserialized object graph.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterDeserializeWithoutBinderSetTitle">
        <source>Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder</source>
        <target state="new">Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodInvocationDescription">
        <source>The method call '{0}' is insecure when deserializing untrusted data.  If you need to instead detect BinaryFormatter deserialization without a SerializationBinder set, then disable rules CA2300 and CA2301, and enable rules CA2302 and CA2303.</source>
        <target state="new">The method call '{0}' is insecure when deserializing untrusted data.  If you need to instead detect BinaryFormatter deserialization without a SerializationBinder set, then disable rules CA2300 and CA2301, and enable rules CA2302 and CA2303.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodInvocationMessage">
        <source>The method call '{0}' is insecure when deserializing untrusted data.</source>
        <target state="new">The method call '{0}' is insecure when deserializing untrusted data.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodInvocationTitle">
        <source>Do not call insecure deserializer BinaryFormatter</source>
        <target state="new">Do not call insecure deserializer BinaryFormatter</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodReferenceDescription">
        <source>The method '{0}' is insecure when deserializing untrusted data.  If you need to instead detect BinaryFormatter deserialization without a SerializationBinder set, then disable rules CA2300 and CA2301, and enable rules CA2302 and CA2303.</source>
        <target state="new">The method '{0}' is insecure when deserializing untrusted data.  If you need to instead detect BinaryFormatter deserialization without a SerializationBinder set, then disable rules CA2300 and CA2301, and enable rules CA2302 and CA2303.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodReferenceMessage">
        <source>The method '{0}' is insecure when deserializing untrusted data.</source>
        <target state="new">The method '{0}' is insecure when deserializing untrusted data.</target>
        <note />
      </trans-unit>
      <trans-unit id="BinaryFormatterMethodReferenceTitle">
        <source>Do not reference insecure deserialization methods in BinaryFormatter</source>
        <target state="new">Do not reference insecure deserialization methods in BinaryFormatter</target>
        <note />
      </trans-unit>
      <trans-unit id="LosFormatterMethodInvocationMessage">
        <source>The method call '{0}' is insecure when deserializing untrusted data.</source>
        <target state="new">The method call '{0}' is insecure when deserializing untrusted data.</target>
        <note />
      </trans-unit>
      <trans-unit id="LosFormatterMethodInvocationTitle">
        <source>Do not call insecure deserializer LosFormatter</source>
        <target state="new">Do not call insecure deserializer LosFormatter</target>
        <note />
      </trans-unit>
      <trans-unit id="LosFormatterMethodReferenceMessage">
        <source>The method '{0}' is insecure when deserializing untrusted data.</source>
        <target state="new">The method '{0}' is insecure when deserializing untrusted data.</target>
        <note />
      </trans-unit>
      <trans-unit id="LosFormatterMethodReferenceTitle">
        <source>Do not reference insecure deserialization methods in LosFormatter</source>
        <target state="new">Do not reference insecure deserialization methods in LosFormatter</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>